buildscript {
    ext.kotlin_version = '1.3.10'
    repositories {
      maven {
        url "https://plugins.gradle.org/m2/"
      }
      mavenCentral()
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:2.0.5.RELEASE')
// tag::build[]
        classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0')
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin_version}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlin_version}")
// end::build[]
    }
}

apply plugin: 'java'
sourceCompatibility = 1.8
targetCompatibility = 1.8
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
//apply plugin: 'org.springframework.boot.gradle.plugin.SpringBootPlugin'

// tag::plugin[]
apply plugin: 'com.palantir.docker'
// end::plugin[]

// This is used as the docker image prefix (org)
group = 'springio'

bootJar {
    baseName = 'SmartCafe'
    version =  '0.1.0'
}

// tag::task[]
task unpack(type: Copy) {
    dependsOn bootJar
    from(zipTree(tasks.bootJar.outputs.files.singleFile))
    into("build/dependency")
}
docker {
    name "${project.group}/${bootJar.baseName}"
    copySpec.from(tasks.unpack.outputs).into("dependency")
    buildArgs(['DEPENDENCY': "dependency"])
}
// end::task[]

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-jdbc")
    compile("com.h2database:h2")
    compile("org.springframework.boot:spring-boot-devtools")
    compile("org.postgresql:postgresql")

//    compile("org.springframework.boot:spring-boot-starter-security")
//    compile("org.springframework.ldap:spring-ldap-core")
//    compile("org.springframework.security:spring-security-ldap")
//    compile("org.springframework:spring-tx")
//    compile("com.unboundid:unboundid-ldapsdk")
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version")
    compile("org.jetbrains.kotlin:kotlin-reflect")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.springframework.security:spring-security-test")
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

